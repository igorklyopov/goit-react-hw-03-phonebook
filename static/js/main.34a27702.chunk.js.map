{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactsList/ContactsList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","ContactsList","contacts","onDeleteContactBtnClick","style","contactsList","map","id","name","number","contactsListItem","contactsName","contactsNumber","btnDelContact","type","onClick","ContactForm","state","onInputChange","e","setState","target","value","onFormSubmit","preventDefault","props","onSubmitData","reset","this","contactForm","onSubmit","inputNameLabel","inputLabelText","inputName","pattern","title","required","onChange","inputTelNumberLabel","inputTelNumber","Component","Filter","onFilterChange","contactsFilterLabel","contactsFilterLabelText","contactsFilterInput","Section","section","sectionTitle","App","filter","addContact","contactsItem","uuidv4","duplicateContactName","find","contact","duplicateContactNumber","alert","getFilteredContacts","normalizedFilterValue","toLocaleLowerCase","trim","includes","deleteContact","contactId","prevState","savedContacts","JSON","parse","localStorage","getItem","setItem","stringify","length","removeItem","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34a27702.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3tJzQ\",\"inputNameLabel\":\"ContactForm_inputNameLabel__3UBz4\",\"inputTelNumberLabel\":\"ContactForm_inputTelNumberLabel__2NZsB\",\"inputName\":\"ContactForm_inputName__1sJTx\",\"inputTelNumber\":\"ContactForm_inputTelNumber__3fytF\",\"inputLabelText\":\"ContactForm_inputLabelText__2_8ls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__Ovwuo\",\"contactsListItem\":\"ContactsList_contactsListItem__2dKMQ\",\"contactsName\":\"ContactsList_contactsName__1nH1G\",\"contactsNumber\":\"ContactsList_contactsNumber__3u8cT\",\"btnDelContact\":\"ContactsList_btnDelContact__Is9rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsFilterInput\":\"Filter_contactsFilterInput__2BF_1\",\"contactsFilterLabel\":\"Filter_contactsFilterLabel__HBmmx\",\"contactsFilterLabelText\":\"Filter_contactsFilterLabelText__3YQKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__mqjoO\",\"container\":\"Section_container__1j9LW\",\"sectionTitle\":\"Section_sectionTitle__3Pvji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1K5II\"};","import styles from \"../Container/Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nexport default Container;\n","import PropTypes from \"prop-types\";\nimport style from \"../ContactsList/ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteContactBtnClick }) => {\n  return (\n    <ul className={style.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.contactsListItem}>\n          <p className={style.contactsName}>{name}: </p>\n          <p className={style.contactsNumber}>{number}</p>\n          <button\n            className={style.btnDelContact}\n            type=\"button\"\n            onClick={() => onDeleteContactBtnClick(id)}\n            aria-label=\"Delete contact button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContactBtnClick: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport style from \"../ContactForm/ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  static propTypes = {\n    onSubmitData: PropTypes.func.isRequired,\n  };\n\n  onInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmitData(this.state.name, this.state.number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={style.contactForm} onSubmit={this.onFormSubmit}>\n        <label className={style.inputNameLabel}>\n          <span className={style.inputLabelText}>Name</span>\n          <input\n            className={style.inputName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я ]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов, не должно начинаться или оканчиваться пробелом. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <label className={style.inputTelNumberLabel}>\n          <span className={style.inputLabelText}>Number</span>\n          <input\n            className={style.inputTelNumber}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки, и может начинаться с +, не должен начинаться или оканчиваться пробелом\"\n            required\n            value={number}\n            onChange={this.onInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport style from \"../Filter/Filter.module.css\";\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <label className={style.contactsFilterLabel}>\n      <span className={style.contactsFilterLabelText}>\n        Find contacts by name\n      </span>\n      <input\n        type=\"text\"\n        className={style.contactsFilterInput}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport style from \"../Section/Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={style.section}>\n      {title && <h2 className={style.sectionTitle}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Container from \"./components/Container/Container\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (savedContacts.length === 0) {\n      localStorage.removeItem(\"contacts\");\n    }\n  }\n\n  addContact = (name, number) => {\n    const contactsItem = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    const duplicateContactName = contacts.find(\n      (contact) => contact.name === contactsItem.name\n    );\n    const duplicateContactNumber = contacts.find(\n      (contact) => contact.number === contactsItem.number\n    );\n\n    if (duplicateContactName) {\n      alert(`${contactsItem.name} is already in contacts!`);\n      return;\n    }\n    if (duplicateContactNumber) {\n      alert(\n        `${contactsItem.number} is already in contacts! (${duplicateContactNumber.name} has this number)`\n      );\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contactsItem, ...contacts],\n    }));\n  };\n\n  onFilterChange = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilterValue = filter.toLocaleLowerCase().trim();\n\n    return contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilterValue)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const filteredContacts = this.getFilteredContacts();\n\n    return (\n      <Section>\n        <Container>\n          <h1 className=\"mainTitle\">Phonebook</h1>\n          <ContactForm onSubmitData={this.addContact} />\n          <h2 className=\"title\">Contacts</h2>\n          <Filter onFilterChange={this.onFilterChange} />\n          <ContactsList\n            contacts={filteredContacts}\n            onDeleteContactBtnClick={this.deleteContact}\n          />\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}